Given a binary array nums, return the maximum number of consecutive 1's in the array.

 

Example 1:

Input: nums = [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.
Example 2:

Input: nums = [1,0,1,1,0,1]
Output: 2

Approach 1:

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int max=0,i=0,n=nums.length;
        while(i<n){
            int count=0;
            while(i<n && nums[i]==1){
                count++;
                i++;
            }
            max=Math.max(max,count);
            i++;
        }
        return max;

           }
}

Approach 2:

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int maxHere=0,maxi=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==1){
                maxHere++;
            }
            else{
                maxi=Math.max(maxi,maxHere);
                maxHere=0;
            }
        }
        maxi=Math.max(maxi,maxHere);
        return maxi;
    }
}

or

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int maxHere=0,maxi=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==1){
              
                maxHere++;
                  maxi=Math.max(maxi,maxHere);
 
            }
            else{
                maxHere=0;
            }
        }
        maxi=Math.max(maxi,maxHere);
        return maxi;
    }
}