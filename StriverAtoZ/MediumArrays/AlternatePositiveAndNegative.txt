Approach 1:

import java.util.*;
public class Solution {
    public static int[] alternateNumbers(int []nums) {
       int n=nums.length;
        List<Integer> pos=new ArrayList<>();
        List<Integer> neg=new ArrayList<>();

       for(int i=0;i<nums.length;i++){
           if(nums[i]<0){
               neg.add(nums[i]);
           }
           else{
               pos.add(nums[i]);
            }
       }
       for(int i=0;i<nums.length/2;i++){
           nums[i*2]=pos.get(i);
           nums[i*2+1]=neg.get(i);
       } 
        return nums;
    }
}

Approach 2:

import java.util.*;
public class Solution {
    public static int[] alternateNumbers(int []nums) {
       int n=nums.length;
        List<Integer> pos=new ArrayList<>();
        List<Integer> neg=new ArrayList<>();

       for(int i=0;i<nums.length;i++){
           if(nums[i]<0){
               neg.add(nums[i]);
           }
           else{
               pos.add(nums[i]);
            }
       }
       int k=0,i=0,j=0;
       while(i<pos.size() && j<neg.size()){
           nums[k]=pos.get(i);
           k++;
           i++;

           nums[k]=neg.get(j);
           k++;
           j++;
       } 
        return nums;
    }
}