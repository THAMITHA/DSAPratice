Approach 1:

class Solution {
    public int maxProfit(int[] prices) {
        int max=-1;
        for(int i=0;i<prices.length-2;i++){
            for(int j=i+1;j<prices.length-1;j++){
                if((prices[j]-prices[i])>max){
                    max=prices[j]-prices[i];
                }
            }
        }
        if(max<0){
            return 0;
        }
        return max;
    }
}



Approach 2:

class Solution {
    public int maxProfit(int[] prices) {
        int maxPro=0,n=prices.length,minPrice=Integer.MAX_VALUE;
        for(int i=0;i<prices.length;i++){
            if(minPrice>prices[i]){
                minPrice=prices[i];
            }
            maxPro=Math.max(maxPro,prices[i]-minPrice);
        }
        return maxPro;
    }
}