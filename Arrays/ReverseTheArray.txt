Given an Array/list 'Arr' of Integers and a position 'M',
You have to reverse the array after that position.

Example:

we have an array ARR={1,2,3,4,5,6} and m=3, considering 0 based indexing so the subArray {5,6} will be reversed and our output array will be {1,2,3,4,6,5} 

Approach 1

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    public static void reverseArray(ArrayList<Integer> arr, int m)
    {
        ArrayList<Integer>ar=new ArrayList<Integer>();
        int n=arr.size();
       
        for(int i=0;i<n;i++){
            ar.add(0);
        }
        int p=0;
        for(int i=0;i<=m;i++){
            ar.set(p++,arr.get(i));
        }

        for(int i=n-1;i>m;i--){
            ar.set(p++,arr.get(i));
        }

        for(int i=0;i<n;i++){
            arr.set(i,ar.get(i));
        }
    }
}


Approach 2

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;
public class Solution 
{
    public static void reverseArray(ArrayList<Integer> arr, int m)
    { 
        int n=arr.size();
        int i=m+1;
        int j=n-1;

        while(i<j){
            Collections.swap(arr, i, j);
            i++;
            j--;

        }

    }
}
